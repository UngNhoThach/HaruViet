plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id("com.google.gms.google-services")

    // id("com.google.gms.google-services") version "4.4.1" apply false
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        multiDexEnabled true
        applicationId "vn.eco_app"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
          // Don't package arm64-v8a or x86_64
          // abiFilters 'armeabi-v7a', 'x86'
          abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
        }
    }



    signingConfigs {
        release {
            keyAlias 'ecoapp'
            keyPassword '1322001'
            storeFile rootProject.file('./key/ecoapp-keystore.keystore')
            storePassword '1322001'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            signingConfig signingConfigs.debug

        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    aaptOptions {  
        cruncherEnabled = false  
    }
}

flutter {
    source '../..'
} 



dependencies {
    implementation(platform("com.google.firebase:firebase-bom:32.7.4"))
    implementation 'com.android.support:multidex:2.0.1'
    // implementation("com.google.firebase:firebase-analytics")
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.mlkit:face-detection:16.1.5'
    implementation 'com.google.android.gms:play-services-mlkit-face-detection:17.1.0'
    // for splash screen 
    implementation "androidx.core:core-splashscreen:1.0.0"

}

